\BOOKMARK [0][]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][]{section.1.1}{Background and Motivation}{chapter.1}% 2
\BOOKMARK [1][]{section.1.2}{Problem Statement}{chapter.1}% 3
\BOOKMARK [2][]{subsection.1.2.1}{Current Shortcomings}{section.1.2}% 4
\BOOKMARK [1][]{section.1.3}{Research Proposal}{chapter.1}% 5
\BOOKMARK [1][]{section.1.4}{Contributions}{chapter.1}% 6
\BOOKMARK [1][]{section.1.5}{Structure and Roadmap}{chapter.1}% 7
\BOOKMARK [1][]{section.1.6}{Open Source Contributions}{chapter.1}% 8
\BOOKMARK [1][]{section.1.7}{Publications, Presentations and References}{chapter.1}% 9
\BOOKMARK [0][]{chapter.2}{Related Work}{}% 10
\BOOKMARK [1][]{section.2.1}{Cloud computing and Open Source Cloud Platforms}{chapter.2}% 11
\BOOKMARK [2][]{subsection.2.1.1}{Cloud interoperability}{section.2.1}% 12
\BOOKMARK [3][]{subsubsection.2.1.1.1}{IEEE Intercloud}{subsection.2.1.1}% 13
\BOOKMARK [3][]{subsubsection.2.1.1.2}{pkgcloud}{subsection.2.1.1}% 14
\BOOKMARK [3][]{subsubsection.2.1.1.3}{Eucalyptus}{subsection.2.1.1}% 15
\BOOKMARK [1][]{section.2.2}{Volunteered resource sharing}{chapter.2}% 16
\BOOKMARK [2][]{subsection.2.2.1}{Hybrid and Community Clouds}{section.2.2}% 17
\BOOKMARK [2][]{subsection.2.2.2}{Cycle and Storage Sharing, using Volunteer Resource Systems}{section.2.2}% 18
\BOOKMARK [2][]{subsection.2.2.3}{Peer-to-Peer Networks and Architectures}{section.2.2}% 19
\BOOKMARK [3][]{subsubsection.2.2.3.1}{Unstructured}{subsection.2.2.3}% 20
\BOOKMARK [3][]{subsubsection.2.2.3.2}{Structured with Distributed Hash Tables}{subsection.2.2.3}% 21
\BOOKMARK [3][]{subsubsection.2.2.3.3}{Structured without Distributed Hash Tables}{subsection.2.2.3}% 22
\BOOKMARK [3][]{subsubsection.2.2.3.4}{Fault Tolerance, Load Balancing, Assurance and Trust}{subsection.2.2.3}% 23
\BOOKMARK [3][]{subsubsection.2.2.3.5}{Fault Tolerance, Persistence and Availability}{subsection.2.2.3}% 24
\BOOKMARK [3][]{subsubsection.2.2.3.6}{Load Balancing}{subsection.2.2.3}% 25
\BOOKMARK [3][]{subsubsection.2.2.3.7}{Assurance and Trust}{subsection.2.2.3}% 26
\BOOKMARK [1][]{section.2.3}{Resource sharing using the Web platform}{chapter.2}% 27
\BOOKMARK [2][]{subsection.2.3.1}{Web Platform}{section.2.3}% 28
\BOOKMARK [2][]{subsection.2.3.2}{Previous attempts on cycle sharing through web platform}{section.2.3}% 29
\BOOKMARK [1][]{section.2.4}{Summary}{chapter.2}% 30
\BOOKMARK [0][]{chapter.3}{Architecture}{}% 31
\BOOKMARK [1][]{section.3.1}{Distributed Architecture}{chapter.3}% 32
\BOOKMARK [2][]{subsection.3.1.1}{Entities}{section.3.1}% 33
\BOOKMARK [2][]{subsection.3.1.2}{Interaction Protocols}{section.3.1}% 34
\BOOKMARK [3][]{subsubsection.3.1.2.1}{Peer joins and leaves}{subsection.3.1.2}% 35
\BOOKMARK [3][]{subsubsection.3.1.2.2}{Message routing}{subsection.3.1.2}% 36
\BOOKMARK [1][]{section.3.2}{Resource Management}{chapter.3}% 37
\BOOKMARK [2][]{subsection.3.2.1}{Job Submission}{section.3.2}% 38
\BOOKMARK [2][]{subsection.3.2.2}{Job Execution}{section.3.2}% 39
\BOOKMARK [1][]{section.3.3}{Architecture of the Software stack}{chapter.3}% 40
\BOOKMARK [2][]{subsection.3.3.1}{Communication layer}{section.3.3}% 41
\BOOKMARK [2][]{subsection.3.3.2}{Service router}{section.3.3}% 42
\BOOKMARK [2][]{subsection.3.3.3}{Job scheduler}{section.3.3}% 43
\BOOKMARK [1][]{section.3.4}{API design}{chapter.3}% 44
\BOOKMARK [2][]{subsection.3.4.1}{API calls signatures}{section.3.4}% 45
\BOOKMARK [2][]{subsection.3.4.2}{API Usage Flow}{section.3.4}% 46
\BOOKMARK [1][]{section.3.5}{Testing framework requirement}{chapter.3}% 47
\BOOKMARK [2][]{subsection.3.5.1}{browserCloudjs quality test workflow}{section.3.5}% 48
\BOOKMARK [2][]{subsection.3.5.2}{browserCloudjs quality test assessment}{section.3.5}% 49
\BOOKMARK [1][]{section.3.6}{Summary}{chapter.3}% 50
\BOOKMARK [0][]{chapter.4}{Implementation}{}% 51
\BOOKMARK [1][]{section.4.1}{Browser module}{chapter.4}% 52
\BOOKMARK [1][]{section.4.2}{Signalling server}{chapter.4}% 53
\BOOKMARK [1][]{section.4.3}{Key learnings from the earlier iterations - webrtc-ring}{chapter.4}% 54
\BOOKMARK [1][]{section.4.4}{Testing framework - piri-piri}{chapter.4}% 55
\BOOKMARK [1][]{section.4.5}{Visualize the network state}{chapter.4}% 56
\BOOKMARK [1][]{section.4.6}{Simulate a browserCloud.js network}{chapter.4}% 57
\BOOKMARK [1][]{section.4.7}{Ray Tracing module}{chapter.4}% 58
\BOOKMARK [1][]{section.4.8}{Summary}{chapter.4}% 59
\BOOKMARK [0][]{chapter.5}{Evaluation}{}% 60
\BOOKMARK [1][]{section.5.1}{Qualitative assessment}{chapter.5}% 61
\BOOKMARK [1][]{section.5.2}{Quantitative assessment}{chapter.5}% 62
\BOOKMARK [2][]{subsection.5.2.1}{The setup}{section.5.2}% 63
\BOOKMARK [2][]{subsection.5.2.2}{Goals}{section.5.2}% 64
\BOOKMARK [2][]{subsection.5.2.3}{Results}{section.5.2}% 65
\BOOKMARK [2][]{subsection.5.2.4}{Analysis}{section.5.2}% 66
\BOOKMARK [2][]{subsection.5.2.5}{Inference}{section.5.2}% 67
\BOOKMARK [1][]{section.5.3}{Finger Table Optimization for minimum number of hops between any two peers}{chapter.5}% 68
\BOOKMARK [2][]{subsection.5.3.1}{Pick the first 16 fingers from a 48bit Finger Table}{section.5.3}% 69
\BOOKMARK [2][]{subsection.5.3.2}{Pick 16 fingers equality spaced in a 48bit Finger Table}{section.5.3}% 70
\BOOKMARK [2][]{subsection.5.3.3}{Pick 16 fingers using a geometric distribuion with decreasing density}{section.5.3}% 71
\BOOKMARK [2][]{subsection.5.3.4}{Analysis}{section.5.3}% 72
\BOOKMARK [1][]{section.5.4}{Summary}{chapter.5}% 73
\BOOKMARK [0][]{chapter.6}{Conclusion}{}% 74
\BOOKMARK [1][]{section.6.1}{Future Work}{chapter.6}% 75
