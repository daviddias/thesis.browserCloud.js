\BOOKMARK [0][]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][]{section.1.1}{Historical Overview}{chapter.1}% 2
\BOOKMARK [1][]{section.1.2}{Problem Statement}{chapter.1}% 3
\BOOKMARK [1][]{section.1.3}{Extended motivation and Roadmap}{chapter.1}% 4
\BOOKMARK [1][]{section.1.4}{Proposal}{chapter.1}% 5
\BOOKMARK [1][]{section.1.5}{Contribution}{chapter.1}% 6
\BOOKMARK [1][]{section.1.6}{Thesis objectives and expected results}{chapter.1}% 7
\BOOKMARK [1][]{section.1.7}{Structure of the thesis}{chapter.1}% 8
\BOOKMARK [0][]{chapter.2}{Related Work}{}% 9
\BOOKMARK [1][]{section.2.1}{Types of Storage}{chapter.2}% 10
\BOOKMARK [2][]{subsection.2.1.1}{Key-Value Stores}{section.2.1}% 11
\BOOKMARK [2][]{subsection.2.1.2}{Document Stores:}{section.2.1}% 12
\BOOKMARK [2][]{subsection.2.1.3}{Column-Family Stores \(or extensible record stores:}{section.2.1}% 13
\BOOKMARK [2][]{subsection.2.1.4}{Graph Databases:}{section.2.1}% 14
\BOOKMARK [1][]{section.2.2}{Design Issues}{chapter.2}% 15
\BOOKMARK [2][]{subsection.2.2.1}{Organization}{section.2.2}% 16
\BOOKMARK [3][]{subsubsection.2.2.1.1}{Distribution}{subsection.2.2.1}% 17
\BOOKMARK [3][]{subsubsection.2.2.1.2}{Indexing}{subsection.2.2.1}% 18
\BOOKMARK [3][]{subsubsection.2.2.1.3}{Querying languages}{subsection.2.2.1}% 19
\BOOKMARK [2][]{subsection.2.2.2}{Semantics and Enforcement}{section.2.2}% 20
\BOOKMARK [3][]{subsubsection.2.2.2.1}{Consistency}{subsection.2.2.2}% 21
\BOOKMARK [3][]{subsubsection.2.2.2.2}{Concurrency Control}{subsection.2.2.2}% 22
\BOOKMARK [2][]{subsection.2.2.3}{Dependability}{section.2.2}% 23
\BOOKMARK [3][]{subsubsection.2.2.3.1}{Replication}{subsection.2.2.3}% 24
\BOOKMARK [1][]{section.2.3}{Typical distributed data stores in use}{chapter.2}% 25
\BOOKMARK [2][]{subsection.2.3.1}{Key-Value Stores}{section.2.3}% 26
\BOOKMARK [3][]{subsubsection.2.3.1.1}{Voldemort}{subsection.2.3.1}% 27
\BOOKMARK [3][]{subsubsection.2.3.1.2}{Dynamo}{subsection.2.3.1}% 28
\BOOKMARK [2][]{subsection.2.3.2}{Document Stores}{section.2.3}% 29
\BOOKMARK [3][]{subsubsection.2.3.2.1}{MongoDB}{subsection.2.3.2}% 30
\BOOKMARK [3][]{subsubsection.2.3.2.2}{CouchDB}{subsection.2.3.2}% 31
\BOOKMARK [2][]{subsection.2.3.3}{Column-Stores}{section.2.3}% 32
\BOOKMARK [3][]{subsubsection.2.3.3.1}{HBase}{subsection.2.3.3}% 33
\BOOKMARK [3][]{subsubsection.2.3.3.2}{Spanner}{subsection.2.3.3}% 34
\BOOKMARK [3][]{subsubsection.2.3.3.3}{PNUTS}{subsection.2.3.3}% 35
\BOOKMARK [3][]{subsubsection.2.3.3.4}{Megastore}{subsection.2.3.3}% 36
\BOOKMARK [3][]{subsubsection.2.3.3.5}{Azure}{subsection.2.3.3}% 37
\BOOKMARK [3][]{subsubsection.2.3.3.6}{Cassandra}{subsection.2.3.3}% 38
\BOOKMARK [4][]{paragraph.2.3.3.6.1}{Scalability:}{subsubsection.2.3.3.6}% 39
\BOOKMARK [4][]{paragraph.2.3.3.6.2}{Fault-Tolerance:}{subsubsection.2.3.3.6}% 40
\BOOKMARK [2][]{subsection.2.3.4}{Typical distributed and replicated deployments}{section.2.3}% 41
\BOOKMARK [3][]{subsubsection.2.3.4.1}{Google Cloud Data Store}{subsection.2.3.4}% 42
\BOOKMARK [3][]{subsubsection.2.3.4.2}{MapReduce Framework}{subsection.2.3.4}% 43
\BOOKMARK [0][]{chapter.3}{Architecture}{}% 44
\BOOKMARK [1][]{section.3.1}{System overview}{chapter.3}% 45
\BOOKMARK [2][]{figure.3.1}{Data Center Storage View:}{section.3.1}% 46
\BOOKMARK [3][]{paragraph.3.1.0.2.2}{Application Flow:}{figure.3.1}% 47
\BOOKMARK [4][]{paragraph.3.1.0.2.3}{Usage:}{paragraph.3.1.0.2.2}% 48
\BOOKMARK [1][]{section.3.2}{Network Architecture}{chapter.3}% 49
\BOOKMARK [1][]{section.3.3}{System Architecture}{chapter.3}% 50
\BOOKMARK [1][]{section.3.4}{Consistency Enforcement}{chapter.3}% 51
\BOOKMARK [1][]{section.3.5}{Prototypical Example}{chapter.3}% 52
\BOOKMARK [1][]{section.3.6}{Software Architecture}{chapter.3}% 53
\BOOKMARK [1][]{section.3.7}{From eventual consistency to vector-field bounded consistency}{chapter.3}% 54
\BOOKMARK [2][]{subsection.3.7.1}{Remote Procedure Calls}{section.3.7}% 55
\BOOKMARK [1][]{section.3.8}{Challenges addressed and solution proposal}{chapter.3}% 56
\BOOKMARK [1][]{section.3.9}{Development method}{chapter.3}% 57
\BOOKMARK [0][]{chapter.4}{Implementation}{}% 58
\BOOKMARK [1][]{section.4.1}{Roadmap}{chapter.4}% 59
\BOOKMARK [1][]{section.4.2}{Extensions to the HBase internal mechanisms}{chapter.4}% 60
\BOOKMARK [1][]{section.4.3}{How to integrate a Quality of Data \(QoD\) module into HBase}{chapter.4}% 61
\BOOKMARK [2][]{subsection.4.3.1}{Extensions to HBase internal mechanisms}{section.4.3}% 62
\BOOKMARK [2][]{subsection.4.3.2}{Operation Grouping}{section.4.3}% 63
\BOOKMARK [2][]{subsection.4.3.3}{Proposed scenario}{section.4.3}% 64
\BOOKMARK [1][]{section.4.4}{Implementation remarks}{chapter.4}% 65
\BOOKMARK [0][]{chapter.5}{Evaluation}{}% 66
\BOOKMARK [1][]{section.5.1}{Testbed}{chapter.5}% 67
\BOOKMARK [1][]{section.5.2}{Experiments}{chapter.5}% 68
\BOOKMARK [2][]{subsection.5.2.1}{Workloads for YCSB}{section.5.2}% 69
\BOOKMARK [0][]{chapter.6}{Conclusion}{}% 70
\BOOKMARK [1][]{section.6.1}{Concluding remarks}{chapter.6}% 71
