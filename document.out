\BOOKMARK [0][]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][]{section.1.1}{Overview}{chapter.1}% 2
\BOOKMARK [1][]{section.1.2}{Problem Statement}{chapter.1}% 3
\BOOKMARK [1][]{section.1.3}{Extended motivation and Roadmap}{chapter.1}% 4
\BOOKMARK [1][]{section.1.4}{Research Proposal}{chapter.1}% 5
\BOOKMARK [1][]{section.1.5}{Contributions}{chapter.1}% 6
\BOOKMARK [1][]{section.1.6}{Publications}{chapter.1}% 7
\BOOKMARK [1][]{section.1.7}{Structure of the thesis}{chapter.1}% 8
\BOOKMARK [0][]{chapter.2}{Related Work}{}% 9
\BOOKMARK [1][]{section.2.1}{Cloud computing and Open Source Cloud Platforms}{chapter.2}% 10
\BOOKMARK [2][]{subsection.2.1.1}{Cloud interoperability}{section.2.1}% 11
\BOOKMARK [3][]{subsubsection.2.1.1.1}{IEEE Intercloud}{subsection.2.1.1}% 12
\BOOKMARK [3][]{subsubsection.2.1.1.2}{pkgcloud}{subsection.2.1.1}% 13
\BOOKMARK [3][]{subsubsection.2.1.1.3}{Eucalyptus}{subsection.2.1.1}% 14
\BOOKMARK [1][]{section.2.2}{Volunteered resource sharing}{chapter.2}% 15
\BOOKMARK [2][]{subsection.2.2.1}{Hybrid and Community Clouds}{section.2.2}% 16
\BOOKMARK [2][]{subsection.2.2.2}{Cycle and Storage Sharing, using Volunteer Resource Systems}{section.2.2}% 17
\BOOKMARK [2][]{subsection.2.2.3}{Peer-to-Peer Networks and Architectures}{section.2.2}% 18
\BOOKMARK [3][]{subsubsection.2.2.3.1}{Unstructured}{subsection.2.2.3}% 19
\BOOKMARK [3][]{subsubsection.2.2.3.2}{Structured with Distributed Hash Tables}{subsection.2.2.3}% 20
\BOOKMARK [3][]{subsubsection.2.2.3.3}{Structured without Distributed Hash Tables}{subsection.2.2.3}% 21
\BOOKMARK [3][]{subsubsection.2.2.3.4}{Fault Tolerance, Load Balancing, Assurance and Trust}{subsection.2.2.3}% 22
\BOOKMARK [3][]{subsubsection.2.2.3.5}{Fault Tolerance, Persistence and Availability}{subsection.2.2.3}% 23
\BOOKMARK [3][]{subsubsection.2.2.3.6}{Load Balancing}{subsection.2.2.3}% 24
\BOOKMARK [3][]{subsubsection.2.2.3.7}{Assurance and Trust}{subsection.2.2.3}% 25
\BOOKMARK [1][]{section.2.3}{Resource sharing using the Web platform}{chapter.2}% 26
\BOOKMARK [2][]{subsection.2.3.1}{Web Platform}{section.2.3}% 27
\BOOKMARK [2][]{subsection.2.3.2}{Previous attempts on cycle sharing through web platform}{section.2.3}% 28
\BOOKMARK [1][]{section.2.4}{Analysis and discussion}{chapter.2}% 29
\BOOKMARK [0][]{chapter.3}{Architecture}{}% 30
\BOOKMARK [1][]{section.3.1}{Interaction design details}{chapter.3}% 31
\BOOKMARK [2][]{subsection.3.1.1}{Peer joins and leaves}{section.3.1}% 32
\BOOKMARK [2][]{subsection.3.1.2}{Message routing}{section.3.1}% 33
\BOOKMARK [2][]{subsection.3.1.3}{Job Scheduling}{section.3.1}% 34
\BOOKMARK [1][]{section.3.2}{Architecture of the Software stack}{chapter.3}% 35
\BOOKMARK [2][]{subsection.3.2.1}{Communication layer}{section.3.2}% 36
\BOOKMARK [2][]{subsection.3.2.2}{Service router}{section.3.2}% 37
\BOOKMARK [2][]{subsection.3.2.3}{Job scheduler}{section.3.2}% 38
\BOOKMARK [1][]{section.3.3}{API design details}{chapter.3}% 39
\BOOKMARK [1][]{section.3.4}{Summary}{chapter.3}% 40
\BOOKMARK [0][]{chapter.4}{Implementation}{}% 41
\BOOKMARK [0][]{chapter.5}{Evaluation}{}% 42
\BOOKMARK [1][]{section.5.1}{Qualitative Evaluation of data consistency, availability and partition tolerance}{chapter.5}% 43
\BOOKMARK [1][]{section.5.2}{Quantitative Evaluation of system performance when executing jobs and storing/fetching data}{chapter.5}% 44
\BOOKMARK [1][]{section.5.3}{Envisioned final comparative analysis}{chapter.5}% 45
\BOOKMARK [0][]{chapter.6}{Conclusion}{}% 46
\BOOKMARK [0][]{chapter.7}{Future work}{}% 47
